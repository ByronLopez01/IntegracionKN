services:
  traefik:
    image: traefik:v3.1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./dynamic:/etc/traefik/dynamic:ro"
    networks:
      - microservices-net

  apifamilymaster:
    image: apifamilymaster
    build:
      context: ../APIFamilyMaster
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    volumes:
      - family_data:/app/externalproperties
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apifamilymaster.rule=PathPrefix(`/api/FamilyMaster`)"
      - "traefik.http.routers.apifamilymaster.entrypoints=websecure"
      - "traefik.http.services.apifamilymaster.loadbalancer.server.port=8080"
    networks:
      - microservices-net

  apiwaverelease:
    image: apiwaverelease
    build:
      context: ../APIWaveRelease
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    volumes:
      - wave_data:/app/externalproperties
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apiwaverelease.rule=PathPrefix(`/api/WaveRelease`)"
      - "traefik.http.routers.apiwaverelease.entrypoints=websecure"
      - "traefik.http.services.apiwaverelease.loadbalancer.server.port=8080"
    networks:
      - microservices-net

  apilpnpicking:
    image: apilpnpicking
    build:
      context: ../APILPNPicking
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    volumes:
      - lpn_data:/app/externalproperties
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apilpnpicking.rule=PathPrefix(`/api/LpnPicking`)"
      - "traefik.http.routers.apilpnpicking.entrypoints=websecure"
      - "traefik.http.services.apilpnpicking.loadbalancer.server.port=8080"
    networks:
      - microservices-net

  apiorderupdate:
    image: apiorderupdate
    build:
      context: ../APIOrderUpdate
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    volumes:
      - order_update_data:/app/externalproperties
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apiorderupdate.rule=PathPrefix(`/api/OrderCancel`)"
      - "traefik.http.routers.apiorderupdate.entrypoints=websecure"
      - "traefik.http.services.apiorderupdate.loadbalancer.server.port=8080"
    networks:
      - microservices-net

  apiorderconfirmation:
    image: apiorderconfirmation
    build:
      context: ../APIOrderConfirmation
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    #volumes:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apiorderconfirmation.rule=PathPrefix(`/api/OrderConfirmation`)"
      - "traefik.http.routers.apiorderconfirmation.entrypoints=websecure"
      - "traefik.http.services.apiorderconfirmation.loadbalancer.server.port=8080"
    networks:
      - microservices-net

  apisenad:
    image: apisenad
    build:
      context: ../APISenad
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    #volumes:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apisenad.rule=PathPrefix(`/api/Senad`)"
      - "traefik.http.routers.apisenad.entrypoints=websecure"
      - "traefik.http.services.apisenad.loadbalancer.server.port=8080"
    networks:
      - microservices-net

volumes:
  family_data:
  wave_data:
  lpn_data:
  order_update_data:
  order_confirm_data:
  senad_data:

networks:
  microservices-net:
    driver: bridge